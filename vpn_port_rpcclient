#!/usr/local/bin/python2.7

from __future__ import print_function
try:
    from xmlrpclib import ServerProxy
except:
    from xmlrpc.client import ServerProxy
import sys
import os
import time
from argparse import ArgumentParser

config = None

def send_update(dest_ip, dest_port, forwarding_port, deluged_port):
    time.sleep(10)
    s = ServerProxy('http://{}:{}'.format(dest_ip, dest_port))
    try:
        s.update_vpn_port(forwarding_port, deluged_port)
    except Exception as e:
        print('ERROR: %' % e)

def parse_args():
    parser = ArgumentParser(description='Send XML RPC message to update forwarded port')
    parser.add_argument('--destination-ip', '-d', type=str, required=True, metavar='IP', help='address of XML RPC server')
    parser.add_argument('--destination-port', '-p', type=int, metavar='LISTEN_PORT', default=8108, help='listening port of XML RPC server (default 8108)')
    parser.add_argument('--deluged-port', '-P', type=int, metavar='DELUGED_PORT', default=58846, help='listening port of deluged')
    parser.add_argument('forwarding_port', type=int, metavar='FORWARDING_PORT', default=8108, help='new forwarding port, payload of message')
    return parser.parse_args()

if __name__ == '__main__':
    config = parse_args()
    try:
        pid = os.fork()
        if pid > 0:
            sys.exit(0)
    except OSError as e:
        print('fork failed: %d (%s)' % (e.errno, e.strerror), file=sys.stderr)
        sys.exit(1)

    os.chdir('/')
    os.setsid()
    os.umask(0)

    send_update(config.destination_ip, config.destination_port, config.forwarding_port, config.deluged_port)

